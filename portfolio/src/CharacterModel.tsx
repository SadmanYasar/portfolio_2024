// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Author: Noby Grand (https://sketchfab.com/NobyGrand)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/ghost-w-tophat-6b1217e3462440519a2d0e3e75bf16d3
// Title: Ghost w/ Tophat
// */

// import { useGLTF } from '@react-three/drei'

// export default function CharacterModel(props) {
//     const { nodes, materials } = useGLTF('./ghost_w_tophat.glb')
//     return (
//         <group {...props} dispose={null}>
//             <group scale={0.0034} position={[0, -0.55, 0]}>
//                 <group position={[0, 155.777, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
//                     <mesh castShadow receiveShadow geometry={nodes.Eyes_Eyes_0.geometry} material={materials.Eyes} />
//                     <mesh castShadow receiveShadow geometry={nodes.Eyes_Ghost_White_0.geometry} material={materials.Ghost_White} />
//                 </group>
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={nodes.Body_Ghost_White_0.geometry}
//                     material={materials.Ghost_White}
//                     position={[0, 155.777, 0]}
//                     rotation={[-Math.PI / 2, 0, 0]}
//                     scale={100}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={nodes.Hat_Hat_Black_0.geometry}
//                     material={materials.Hat_Black}
//                     position={[0, 299.13, 0]}
//                     rotation={[-Math.PI / 2, 0, 0]}
//                     scale={100}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={nodes.Rim_Rim_Red_0.geometry}
//                     material={materials.Rim_Red}
//                     position={[0, 235.411, 0]}
//                     rotation={[-Math.PI / 2, 0, 0]}
//                     scale={100}
//                 />
//             </group>
//         </group>
//     )
// }

// useGLTF.preload('./ghost_w_tophat.glb')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";
// export default function CharacterModel(props) {
//     const { nodes, materials } = useGLTF('/Demon.glb')
//     for (const material in materials) {
//         materials[material].metalness = -2
//         materials[material].roughness = 1
//     }

//     return (
//         <group name="Root_Scene">
//             <group name="RootNode">
//                 <group name="CharacterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={50} position={[0, -0.85, 0]}>
//                     <primitive object={nodes.Root} />
//                 </group>
//                 <group name="Demon" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
//                     <skinnedMesh
//                         name="Demon_1"
//                         geometry={nodes.Demon_1.geometry}
//                         material={materials.Demon_Main}
//                         skeleton={nodes.Demon_1.skeleton}
//                         receiveShadow
//                         castShadow
//                     />
//                     <skinnedMesh
//                         name="Demon_2"
//                         geometry={nodes.Demon_2.geometry}
//                         material={materials.Black}
//                         skeleton={nodes.Demon_2.skeleton}
//                         receiveShadow
//                         castShadow
//                     />
//                     <skinnedMesh
//                         name="Demon_3"
//                         geometry={nodes.Demon_3.geometry}
//                         material={materials.Eye_White}
//                         skeleton={nodes.Demon_3.skeleton}
//                         receiveShadow
//                         castShadow
//                     />
//                     <skinnedMesh
//                         name="Demon_4"
//                         geometry={nodes.Demon_4.geometry}
//                         material={materials.Eye_Black}
//                         skeleton={nodes.Demon_4.skeleton}
//                         receiveShadow
//                         castShadow
//                     />
//                 </group>
//                 <skinnedMesh
//                     name="Trident"
//                     geometry={nodes.Trident.geometry}
//                     material={materials.Black}
//                     skeleton={nodes.Trident.skeleton}
//                     position={[1.895, 1.734, -0.17]}
//                     scale={75.326}
//                     receiveShadow
//                     castShadow
//                 />
//             </group>
//         </group>
//     )
// }

// useGLTF.preload('/Demon.glb')
// import { useFrame } from "@react-three/fiber";

// export default function Model(props) {
//     const { nodes, materials } = useGLTF("/player.glb");

//     return (
//         <group {...props} dispose={null} position={[0, 0.2, 0]}>
//             <primitive object={nodes.Hips} />
//             <skinnedMesh
//                 name="EyeLeft"
//                 geometry={nodes.EyeLeft.geometry}
//                 material={materials.Wolf3D_Eye}
//                 skeleton={nodes.EyeLeft.skeleton}
//                 morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
//                 morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
//             />
//             <skinnedMesh
//                 name="EyeRight"
//                 geometry={nodes.EyeRight.geometry}
//                 material={materials.Wolf3D_Eye}
//                 skeleton={nodes.EyeRight.skeleton}
//                 morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
//                 morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
//             />
//             <skinnedMesh
//                 name="Wolf3D_Head"
//                 geometry={nodes.Wolf3D_Head.geometry}
//                 material={materials.Wolf3D_Skin}
//                 skeleton={nodes.Wolf3D_Head.skeleton}
//                 morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
//                 morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
//             />
//             <skinnedMesh
//                 name="Wolf3D_Teeth"
//                 geometry={nodes.Wolf3D_Teeth.geometry}
//                 material={materials.Wolf3D_Teeth}
//                 skeleton={nodes.Wolf3D_Teeth.skeleton}
//                 morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
//                 morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
//             />
//             <skinnedMesh
//                 geometry={nodes.Wolf3D_Hair.geometry}
//                 material={materials.Wolf3D_Hair}
//                 skeleton={nodes.Wolf3D_Hair.skeleton}
//             />
//             <skinnedMesh
//                 geometry={nodes.Wolf3D_Glasses.geometry}
//                 material={materials.Wolf3D_Glasses}
//                 skeleton={nodes.Wolf3D_Glasses.skeleton}
//             />
//             <skinnedMesh
//                 name="Wolf3D_Outfit_Top"
//                 geometry={nodes.Wolf3D_Outfit_Top.geometry}
//                 material={materials.Wolf3D_Outfit_Top}
//                 skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
//                 morphTargetDictionary={nodes.Wolf3D_Outfit_Top.morphTargetDictionary}
//                 morphTargetInfluences={nodes.Wolf3D_Outfit_Top.morphTargetInfluences}
//             />
//             <skinnedMesh
//                 name="Wolf3D_Outfit_Bottom"
//                 geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
//                 material={materials.Wolf3D_Outfit_Bottom}
//                 skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
//                 morphTargetDictionary={nodes.Wolf3D_Outfit_Bottom.morphTargetDictionary}
//                 morphTargetInfluences={nodes.Wolf3D_Outfit_Bottom.morphTargetInfluences}
//             />
//             <skinnedMesh
//                 name="Wolf3D_Outfit_Footwear"
//                 geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
//                 material={materials.Wolf3D_Outfit_Footwear}
//                 skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
//                 morphTargetDictionary={
//                     nodes.Wolf3D_Outfit_Footwear.morphTargetDictionary
//                 }
//                 morphTargetInfluences={
//                     nodes.Wolf3D_Outfit_Footwear.morphTargetInfluences
//                 }
//             />
//             <skinnedMesh
//                 name="Wolf3D_Body"
//                 geometry={nodes.Wolf3D_Body.geometry}
//                 material={materials.Wolf3D_Body}
//                 skeleton={nodes.Wolf3D_Body.skeleton}
//                 morphTargetDictionary={nodes.Wolf3D_Body.morphTargetDictionary}
//                 morphTargetInfluences={nodes.Wolf3D_Body.morphTargetInfluences}
//             />
//         </group>
//     );
// }

// useGLTF.preload("/player.glb");
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function CharacterModel(props) {
    const group = useRef();
    const { nodes, materials, animations } = useGLTF("/sayem-animated.glb");
    const { actions } = useAnimations(animations, group);

    //reset position if out of bounds
    useFrame(() => {
        if (group.current.position.y < -1) {
            group.current.position.y = 0;
            group.current.position.x = 0;
            group.current.position.z = 0;
        }
    }
    );

    return (
        <group ref={group} {...props} dispose={null} position={[0, 0, 0]} scale={[2, 2, 2]}>
            <group name="Scene">
                <group name="Armature">
                    <skinnedMesh
                        name="EyeLeft"
                        geometry={nodes.EyeLeft.geometry}
                        material={materials["Wolf3D_Eye.015"]}
                        skeleton={nodes.EyeLeft.skeleton}
                        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
                        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="EyeRight"
                        geometry={nodes.EyeRight.geometry}
                        material={materials["Wolf3D_Eye.015"]}
                        skeleton={nodes.EyeRight.skeleton}
                        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
                        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="Wolf3D_Body"
                        geometry={nodes.Wolf3D_Body.geometry}
                        material={materials["Wolf3D_Body.015"]}
                        skeleton={nodes.Wolf3D_Body.skeleton}
                        morphTargetDictionary={nodes.Wolf3D_Body.morphTargetDictionary}
                        morphTargetInfluences={nodes.Wolf3D_Body.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="Wolf3D_Glasses"
                        geometry={nodes.Wolf3D_Glasses.geometry}
                        material={materials["Wolf3D_Glasses.015"]}
                        skeleton={nodes.Wolf3D_Glasses.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Hair"
                        geometry={nodes.Wolf3D_Hair.geometry}
                        material={materials["Wolf3D_Hair.015"]}
                        skeleton={nodes.Wolf3D_Hair.skeleton}
                    />
                    <skinnedMesh
                        name="Wolf3D_Head"
                        geometry={nodes.Wolf3D_Head.geometry}
                        material={materials["Wolf3D_Skin.015"]}
                        skeleton={nodes.Wolf3D_Head.skeleton}
                        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
                        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Bottom"
                        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                        material={materials["Wolf3D_Outfit_Bottom.015"]}
                        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
                        morphTargetDictionary={
                            nodes.Wolf3D_Outfit_Bottom.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.Wolf3D_Outfit_Bottom.morphTargetInfluences
                        }
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Footwear"
                        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                        material={materials["Wolf3D_Outfit_Footwear.015"]}
                        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
                        morphTargetDictionary={
                            nodes.Wolf3D_Outfit_Footwear.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.Wolf3D_Outfit_Footwear.morphTargetInfluences
                        }
                    />
                    <skinnedMesh
                        name="Wolf3D_Outfit_Top"
                        geometry={nodes.Wolf3D_Outfit_Top.geometry}
                        material={materials["Wolf3D_Outfit_Top.015"]}
                        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
                        morphTargetDictionary={
                            nodes.Wolf3D_Outfit_Top.morphTargetDictionary
                        }
                        morphTargetInfluences={
                            nodes.Wolf3D_Outfit_Top.morphTargetInfluences
                        }
                    />
                    <skinnedMesh
                        name="Wolf3D_Teeth"
                        geometry={nodes.Wolf3D_Teeth.geometry}
                        material={materials["Wolf3D_Teeth.015"]}
                        skeleton={nodes.Wolf3D_Teeth.skeleton}
                        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
                        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
                    />
                    <primitive object={nodes.Hips} />
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/sayem-animated.glb");
