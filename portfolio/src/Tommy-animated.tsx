/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\tommy-animated.glb 
*/

//disable eslint and typescript for this file
/* eslint-disable */
// @ts-nocheck

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { editable as e } from '@theatre/r3f'
import { RigidBody } from '@react-three/rapier'

export default function Tommy(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/tommy-animated.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    actions["Charge"].play();
  }, [actions])

  return (
    <e.group theatreKey='tommy' ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0.909}>
          <group name="Tommy_Vercettiobjcleanermaterialmergergles" />
        </group>
        <group name="Tommy" position={[-0.058, 0.001, 0.088]} rotation={[-0.066, -0.091, -0.062]}>
          <primitive object={nodes.Root} />
          <skinnedMesh name="tommy" geometry={nodes.tommy.geometry} material={materials.Tommy} skeleton={nodes.tommy.skeleton} />
        </group>
      </group>
    </e.group>
  )
}

useGLTF.preload('/tommy-animated.glb')
